{"version":3,"sources":["components/InputForm.js","components/PaginationBtns.js","components/HotPosts.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","justifyContent","alignItems","margin","spacing","width","InputForm","props","classes","className","noValidate","TextField","id","label","Button","variant","onClick","subreddit","document","querySelector","setIsLoading","getHotPosts","value","inputSubreddit","height","changeListing","direction","params","curListing","data","PaginationBtns","isLoading","Tooltip","title","placement","IconButton","color","CircularProgress","defaultProps","paddingTop","paddingBottom","HotPosts","children","List","map","item","date","Date","created_utc","ddmmyyyy","getDate","getMonth","getFullYear","n","join","key","ListItem","button","component","href","url","ListItemText","primary","secondary","author","App","emptyListing","useState","changeCurListing","a","fetch","resp","status","json","Paper","elevation","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.da7ce2d5.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n\n    '& > div': {\n      margin: theme.spacing(1),\n      width: '50ch',\n    },\n  },\n}));\n\nfunction inputSubreddit(props) {\n  const subreddit = document.querySelector('#subreddit');\n  props.setIsLoading(true);\n  props.getHotPosts(subreddit.value, '');\n}\n\nfunction InputForm(props) {\n  const classes = useStyles();\n  return (\n    <form className={classes.root} noValidate>\n      <TextField id=\"subreddit\" label=\"Subreddit\" />\n      <Button variant=\"contained\" onClick={() => inputSubreddit(props)}>Show hot</Button>\n    </form>\n  );\n}\n\nexport default InputForm;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    '& > .posLoader': {\n      height: '40px',\n      width: '40px',\n    },\n  },\n}));\n\nfunction changeListing(props, direction) {\n  let params;\n  props.setIsLoading(true);\n  const subreddit = document.querySelector('#subreddit');\n  if (props.curListing.data[direction] !== null) {\n    params = `?${direction}=${props.curListing.data[direction]}&count=25`;\n  } else { params = ''; }\n  props.getHotPosts(subreddit.value, params);\n}\n\nfunction PaginationBtns(props) {\n  const { isLoading } = props;\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Tooltip title=\"Previous\" placement=\"left\">\n        <IconButton color=\"primary\" onClick={() => changeListing(props, 'before')}>\n          <ArrowBackIosIcon />\n        </IconButton>\n      </Tooltip>\n\n      {!isLoading && <div className=\"posLoader\" />}\n      {isLoading && <CircularProgress />}\n\n      <Tooltip title=\"Next\" placement=\"right\">\n        <IconButton color=\"primary\" onClick={() => changeListing(props, 'after')}>\n          <ArrowForwardIosIcon />\n        </IconButton>\n      </Tooltip>\n    </div>\n  );\n}\n\nexport default PaginationBtns;\n\nPaginationBtns.defaultProps = {\n  isLoading: false,\n};\n\nPaginationBtns.propTypes = {\n  isLoading: PropTypes.bool,\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    '& a': {\n      paddingTop: 0,\n      paddingBottom: 0,\n    },\n  },\n}));\n\nfunction ListItemLink(listing) {\n  return (\n    listing.map((item) => {\n      const date = new Date(item.data.created_utc * 1000);\n      const ddmmyyyy = [date.getDate(), date.getMonth() + 1, date.getFullYear()]\n        .map((n) => (n < 10 ? `0${n}` : `${n}`)).join('-');\n      return (\n        <li key={item.data.id}>\n          <ListItem button component=\"a\" href={item.data.url}>\n            <ListItemText\n              primary={item.data.title}\n              secondary={`Posted by ${item.data.author} at ${ddmmyyyy}`}\n            />\n          </ListItem>\n        </li>\n      );\n    })\n  );\n}\n\nfunction HotPosts(props) {\n  const classes = useStyles();\n  const { curListing: { data: { children } } } = props;\n  return (\n    <List className={classes.root}>\n      {ListItemLink(children)}\n    </List>\n  );\n}\n\nexport default HotPosts;\n\nHotPosts.defaultProps = {\n  curListing: { data: { children: [] } },\n};\n\nHotPosts.propTypes = {\n  curListing: PropTypes.oneOfType([PropTypes.object]),\n};\n","import React, { useState } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputForm from './components/InputForm';\nimport PaginationBtns from './components/PaginationBtns';\nimport HotPosts from './components/HotPosts';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    margin: '20px auto',\n    width: 1000,\n  },\n}));\n\nfunction App() {\n  const emptyListing = { data: { children: [] } };\n  const [curListing, changeCurListing] = useState(emptyListing);\n  const [isLoading, setIsLoading] = useState(false);\n\n  async function getHotPosts(subreddit, params) {\n    const url = `https://www.reddit.com/r/${subreddit}/hot.json`;\n    const resp = await fetch(url + params);\n    if (resp.status === 200) {\n      const data = await resp.json();\n      changeCurListing(data);\n    } else {\n      changeCurListing(emptyListing);\n    }\n    setIsLoading(false);\n  }\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Paper elevation={3}>\n        <InputForm\n          getHotPosts={getHotPosts}\n          setIsLoading={setIsLoading}\n        />\n        <PaginationBtns\n          getHotPosts={getHotPosts}\n          curListing={curListing}\n          isLoading={isLoading}\n          setIsLoading={setIsLoading}\n        />\n        <HotPosts curListing={curListing} />\n      </Paper>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}